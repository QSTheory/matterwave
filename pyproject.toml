[project]
name = "matterwave"

# You can get the current version via 'pixi run -e dev hatch version'
# It does not get updated automatically in editable installs.
# A workaround can be found under https://github.com/maresb/hatch-vcs-footgun-example
# But currently we do not have a usage where this was important.
dynamic = [
    "version"
]
authors = [
    { name="Stefan Seckmeyer"},
    { name="Gabriel MÃ¼ller"},
    { name="Christian Struckmann"},
]
description = "A library for matter wave propagation built on top of fftarray."
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]
dependencies = [
    "scipy",
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling", "hatch-vcs"]

[project.urls]
Homepage = "https://github.com/QSTheory/matterwave"
Issues = "https://github.com/QSTheory/matterwave/issues"

[project.optional-dependencies]
"jax" = [
    "jax>=0.4.30",
]

"dashboards" = [
    "fftarray[helpers]",
    "ipython",
    "bokeh",
    "ipykernel",
    "panel",
    "holoviews",
    "hvplot",
    "colorcet",
    "datashader",
    # numba is a dependency of datashader, pixi install currently (version
    # 0.40.3) fails without setting this minimum version for numba
    "numba>=0.54.0",
]

"dev" = [
    "fftarray[helpers]",
    "matterwave[jax, dashboards, check, doc]",
]

"check" = [
    "fftarray[helpers]",
    "matterwave[jax]",
    "ipython",
    "bokeh",
    "panel",
    "holoviews",
    "hvplot",
    "colorcet",
    "datashader",
    "numba>=0.54.0",
    "mypy>=0.910",
    "pytest",
    "pytest-cov",
    "pytest-xdist[psutil]",
    "pytest-split",
    "array-api-strict",
    "ruff",
]

"doc" = [
    "fftarray[helpers]",
    "matterwave[jax]",
    "sphinx>=4.2",
    "sphinx-autodoc-typehints",
    "sphinx-book-theme>=1.0.1",
    "sphinx-design",
    "lxml_html_clean",
    "nbsphinx",
    "nbsphinx-link",
    "myst-nb",
    "m2r2",
    "matplotlib",
]

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    "B",
    "E4",
    "E7",
    "E9",
    "F",
]

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "_version.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.pixi.tasks]
test = { cmd = ["python", "-m", "pytest", "-n", "auto"]}
test_all = { cmd = ["python", "-m", "pytest", "--include-slow", "-n", "auto"]}

test_all_group = { cmd = ["python", "-m", "pytest", "--include-slow", "--splitting-algorithm", "least_duration", "--splits", "$N_GROUPS", "--group", "$GROUP_ID"]}
# These durations are used to estimate the best split of tests when parallelizing.
# This only needs to be run when tests changed significantly.
# If the timings are out of date it just makes the split a bit less optimal.
store_test_durations = { cmd = ["python", "-m", "pytest", "--include-slow", "--store-durations"]}

ruff_all = { cmd = ["ruff", "check", "tests", "src/matterwave"]}
mypy = { cmd = ["mypy", "src/matterwave", "tests"]}
check = { depends-on = ["mypy", "ruff_all", "test"]}
cov_html = { cmd = ["python", "-m", "pytest", "--cov=./src", "--cov-report=html"]}
cov_xml = { cmd = ["python", "-m", "pytest", "--cov=./src", "--cov-report=xml"]}
doc = { cmd = ["make"], "cwd" = "docs" }
# TODO: Currently only tested on macOS. Would be nice to make it an --open option like in cargo.
doc_open = { cmd = ["open", "docs/build/html/development/index.html"], depends-on = ["doc"] }

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-arm64", "osx-64", "win-64"]

[tool.pixi.pypi-dependencies]
# fftarray = { path = "../fftarray", editable = true }
fftarray = { git = "ssh://git@github.com/QSTheory/fftarray" }
matterwave = { path = ".", editable = true }

[tool.pixi.feature.jaxcuda]
# Needs to be disabled as workaround Part 1 for https://github.com/prefix-dev/pixi/issues/1051
# platforms = ["linux-64"]
system-requirements = {cuda = "12"}

# List jax cuda depdency here as linux-64 specific as workaround Part 2 for https://github.com/prefix-dev/pixi/issues/1051
[tool.pixi.feature.jaxcuda.target.linux-64.pypi-dependencies]
"matterwave" = {version="*", extras=["jax"]}
"jax" = {version=">=0.4.30", extras=["cuda12"]}

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.py313.dependencies]
python = "3.13.*"

[tool.pixi.feature.numpy125.dependencies]
numpy = "1.25.*"

[tool.pixi.environments]
# Recursive optional dependencies are currently ignored by pixi environments: https://github.com/prefix-dev/pixi/issues/2024
devcuda = ["dev", "check", "doc", "jaxcuda", "dashboards"]
dev = ["dev", "check", "doc", "jax", "dashboards"]
doc = ["doc", "jax"]
check = ["check", "jax"]
check310 = ["py310", "check", "jax"]
check311 = ["py311", "check", "jax"]
check312 = ["py312", "check", "jax"]
check313 = ["py313", "check", "jax"]
checknumpy125 = ["numpy125", "check", "jax"]

[tool.pixi.feature.doc.dependencies]
pandoc = ">=3.5,<4"
